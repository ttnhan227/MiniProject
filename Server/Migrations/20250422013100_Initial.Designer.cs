// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Server.Models;

#nullable disable

namespace Server.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250422013100_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Server.Models.AccountModel", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("TotalAmount")
                        .HasColumnType("real");

                    b.HasKey("Username");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Username = "admin",
                            Fullname = "Admin User",
                            Password = "admin123",
                            Role = "admin",
                            TotalAmount = 0f
                        },
                        new
                        {
                            Username = "user1",
                            Fullname = "User One",
                            Password = "user123",
                            Role = "user",
                            TotalAmount = 100f
                        });
                });

            modelBuilder.Entity("Server.Models.Cart", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<string>("AccountModelUsername")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("UserName", "ProductId");

                    b.HasIndex("AccountModelUsername");

                    b.HasIndex("ProductId");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            UserName = "user1",
                            ProductId = 1,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("Server.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description for Product A",
                            Name = "Product A",
                            Price = 50
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description for Product B",
                            Name = "Product B",
                            Price = 30
                        });
                });

            modelBuilder.Entity("Server.Models.Cart", b =>
                {
                    b.HasOne("Server.Models.AccountModel", null)
                        .WithMany("Carts")
                        .HasForeignKey("AccountModelUsername");

                    b.HasOne("Server.Models.Product", "Product")
                        .WithMany("Carts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Models.AccountModel", "AccountModel")
                        .WithMany()
                        .HasForeignKey("UserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountModel");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Server.Models.AccountModel", b =>
                {
                    b.Navigation("Carts");
                });

            modelBuilder.Entity("Server.Models.Product", b =>
                {
                    b.Navigation("Carts");
                });
#pragma warning restore 612, 618
        }
    }
}
